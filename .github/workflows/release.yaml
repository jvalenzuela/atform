name: release

on:
  push:
    tags:
      - 'release/*'

jobs:
  unittest:
    strategy:
      matrix:
        os:
          # Latest Linux runner to support Python 3.7 per
          # https://github.com/actions/python-versions/blob/main/versions-manifest.json commit e550a75
          - ubuntu-22.04

          - windows-latest

          # Latest MacOS to support x64, which is the only architecture
          # supported by all Python versions.
          - macos-13

        # Python versions to run on; must match the requires-python in
        # pyproject.toml.
        python:
          - '3.7'
          - '3.8'
          - '3.9'
          - '3.10'
          - '3.11'
          - '3.12'
          - '3.13'

    runs-on: ${{ matrix.os }}

    steps:
      - name: Install target Python version
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - name: Checkout target commit
        uses: actions/checkout@v4

      - name: Install requirements
        run: |
          pip install toml-to-requirements
          toml-to-req --toml-file pyproject.toml
          pip install -r requirements.txt

      - name: Run unit tests
        run: python -m unittest

      - name: Upload output
        uses: actions/upload-artifact@v4
        with:
          name: unittest_output_${{ matrix.os }}_python${{ matrix.python }}
          path: |
            pdf/*
            example_output/**

  build:
    runs-on: ubuntu-latest
    needs: unittest
    permissions:
      contents: write # Required to create a new release.

    steps:
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          # Needs to be 3.11 or later due to packages used by doc/source/conf.py.
          python-version: '3.11'

      - name: Install build requirements
        run: |
          pip install build
          pip install sphinx
          pip install twine

      - name: Install LaTeX
        run: |
          sudo apt-get update
          sudo apt-get install latexmk
          sudo apt-get install texlive-latex-extra

      - name: Checkout target commit
        uses: actions/checkout@v4

      # Sphinx imports the module being documented, so dependencies need
      # to be present.
      - name: Install dependencies
        run: |
          pip install toml-to-requirements
          toml-to-req --toml-file pyproject.toml
          pip install -r requirements.txt

      - name: Build manual
        run: make latexpdf
        working-directory: ./doc

      - name: Build package
        run: python -m build --wheel

      # Extract the version number from the tag to create the release name.
      - name: Create release name
        run: echo "RELEASE_NAME=v$(echo $GITHUB_REF_NAME | cut -d'/' -f2)" >> $GITHUB_ENV

      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          artifacts: dist/*, doc/build/latex/*.pdf
          draft: true
          name: ${{ env.RELEASE_NAME }}
